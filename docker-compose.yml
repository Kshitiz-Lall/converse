services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: devtoolkit-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-devtoolkit}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - devtoolkit-network

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: devtoolkit-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - devtoolkit-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: devtoolkit-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${BACKEND_PORT:-3000}
      MONGODB_URI: mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password123}@mongo:27017/${MONGO_DATABASE:-devtoolkit}?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3001}
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    depends_on:
      - mongo
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - devtoolkit-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: devtoolkit-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:${BACKEND_PORT:-3000}
    ports:
      - "${FRONTEND_PORT:-3001}:80"
    depends_on:
      - backend
    networks:
      - devtoolkit-network

volumes:
  mongo_data:
  redis_data:

networks:
  devtoolkit-network:
    driver: bridge